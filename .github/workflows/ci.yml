name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: floneo_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd server
        npm ci
    
    - name: Setup test database
      run: |
        cd server
        cp .env.example .env
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/floneo_test" >> .env
        echo "JWT_SECRET=test-secret" >> .env
        echo "JWT_REFRESH_SECRET=test-refresh-secret" >> .env
        npx prisma generate
        npx prisma db push
    
    - name: Run backend tests
      run: |
        cd server
        npm test

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd client
        npm ci
    
    - name: Build frontend
      run: |
        cd client
        cp .env.example .env.local
        npm run build
    
    - name: Run frontend linting
      run: |
        cd client
        npm run lint
