name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: fathima
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: lowcode_db
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd server
        npm ci || npm install
        # Ensure Prisma CLI is properly installed
        npm install prisma @prisma/client --save-dev || true

    - name: Wait for Postgres to be ready
      shell: bash
      run: |
        for i in {1..60}; do
          if (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1; then echo "Postgres is up"; exit 0; fi
          sleep 1
        done
        echo "Postgres did not become ready in time"; exit 1

    - name: Setup test database
      run: |
        cd server
        cp .env.example .env
        echo "DATABASE_URL=postgresql://fathima:mypassword@localhost:5432/lowcode_db?schema=public" >> .env
        echo "JWT_SECRET=test-secret" >> .env
        echo "JWT_REFRESH_SECRET=test-refresh-secret" >> .env
        echo "NODE_ENV=test" >> .env
        echo "PORT=5000" >> .env
        echo "BCRYPT_SALT_ROUNDS=10" >> .env
        npx prisma generate
        npx prisma db push
    
    - name: Run backend tests
      run: |
        cd server
        npm test

  test-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install frontend dependencies
      run: |
        cd client
        npm ci || npm install

    - name: Build frontend
      run: |
        cd client
        cp .env.example .env.local
        echo "NEXT_PUBLIC_API_URL=http://localhost:5000" >> .env.local
        echo "NEXT_PUBLIC_SOCKET_URL=http://localhost:5000" >> .env.local
        npm run build

    - name: Run frontend linting
      run: |
        cd client
        npm run lint
